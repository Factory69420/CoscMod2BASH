ssh student@10.50.X.X -X (enter ips for X.X)
ssh student@10.50.32.21 -X (Windows)
ssh student@10.50.38.145 -X (Linux Use terminator command to open weird cmd)
Terminator

http://10.50.24.190/challenges
LCplElliott
passwd: Carmel69420!
-----------------------------------------------------------------------DAY 1------------------------------------------------------------------
>ls - al
# This will show hidden files (typically start with a period)

>sudo !!
# This will run last command as root

>grep
# Searches for ____ in a file (put whatever you want as underline)
# -v finds everything but this
# egrep or grep -E
>ls -lisa
# standard ls shows all information

>touch -t yymmddhhmm.ss
# Change timestamp

>mkdir -p
# makes directory -p wil make parent directory of directory you just made.
# mkdir sushi{11,22,33,44} makes files called sushi and the number inside braces get added to the sushi
>umark
default is 0002. This number shows default permissions

>chmod 777
# changes permissions of file

>rm
# removes file use -rf to recurivsely remove.

>rmdir -p
# removes directory -p removes parent directory


> ls ~/*.log
# ~ and /  just say home directory and * is the wildcard


>mv src dest target dst
# Self explanatory

>locate <what we want to locate> | grep <what we want to find this color codes :D )
# Searches filesystem


>whereis man
# Similiar to locate. In this instance shows us where man is present at.

>find  <where to start searching> <options>
# -name is case sensitive 
# -iname is insensitive 
# -lname is symbolic link files 
# -inum shows inode numbers 
# -size looks for files with files of whatever size (default is bytes) +10M -20M (finds files between 10-20 megabytes)
# -maxdepth maxium amount of directory to search from current directory
# - type d finds directories
# good example of find command(dev/null relates to errors error code handling to be specific): find / -type s -exec echo {} 2>/dev/null \; | grep domain*
# time = days
# a = accessed
# c = changed
# m = modified
find -cmin -30
#command above finds files changed in the last 30 mins\
find /var/log/ -iname *.log -exec ls -al {} 2>/dev/null \;
-exec makes the ls -al get executed



https://linuxhandbook.com/find-exec-command/

find [path] [arguments] -exec [command] {} \;
find [path] [arguments] -exec [command] {} +


cat /etc/passwd | grep /bin/bash
#shows who has bash prompt


>killall
# kills all the processes


> kill <PID>
# kills a process by number

>pkil (name)
#kills a process by name

>cut -d: -f1 fakepasswd
# this gives field 1 of password
# -d means delimtor and it is doing it by:
# -f1 means field 1
# Delimitor in this case is the :



>cut -d: -f1 -s fakepasswd
# -s means print anything containing to delimtor. Works like the opposite of like grep -v


--------------------------------------------DAY 2---------------------------------------------------------------
>tail fakepasswd.txt | awk -F: '{print $1}'

Output: last 10 lines of fakepasswd.txt




-F: = sepereated by colons
print $1 = print field 1 

>tail fakepasswd.txt | awk -F: '{print $2}'

Output: all x's in password place(last 10 lines)

>tail fakepasswd.txt | awk -F: '{print $0}'

Output: Print everything(last 10 lines)

>tail fakepasswd.txt | awk -F: '{print $1,$3}'

Output: name and user ID (prints field 1 and field 3)


>awk -F: 'BEGIN' '{OFS="#"} {print $1,$3}' fakepasswd.txt




$NF= Not first
OFS= Output Field Seperator
Output:adds numbers to the right of outputed txt


>cat fakepasswd.txt | sort
-n argument does numerically
-nr argument sorts numerically reveresed
-u argument sorts uniquely sometimes need to pipe to uniq '| uniq'
> ps aux | sort - k 2 -nr
-ps aux is like ps -elf
-k # sorts by column #

Output: It sorts file by position in ascii key table (alphabetical)

















